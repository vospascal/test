name: publish
on:
  push:
    branches:
      - main
    tags:
      - "!*"
jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.1
          registry-url: https://npm.pkg.github.com

      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # docs https://pnpm.io/continuous-integration#github-actions
        with:
            version: 8.15.6  # Optional: specify a pnpm version    

      - name: install
        run: pnpm install
      - name: test
        run: pnpm test
  
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test-and-build
    permissions:
      packages: write
      contents: read
      repository-projects: write
      pull-requests: write
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.1
          registry-url: https://npm.pkg.github.com

      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # docs https://pnpm.io/continuous-integration#github-actions
        with:
            version: 8.15.6  # Optional: specify a pnpm version  
      - name: pnpm install
        run: pnpm install

      # Build the project
      - name: Build
        run: |
          pnpm build

      # Publish to npm if this version is not published
      - name: publish
        run: |
          npx can-npm-publish --verbose && npm publish || echo "Does not publish"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Push tag to GitHub if package.json version's tag is not tagged
      - name: package-version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      - name: package-version-to-git-tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"